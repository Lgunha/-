개발자가 갖춰야할 능력!

1. 운영체제 : cpu정보, 메모리용량, 하드디스크 사용용량, 자신의 아이피, 디렉토리와 폴더관리
	   . 프로그램 추가 삭제 관리능력, 포트번호 이해

	>>윈도우기반, 리눅스 기반 

2. 소스관리: -자신의 하드디스크에 저장, 웹하드
	    - 형상관리 : git

<자신의 하드디스크에 저장>
workspace 확인하기 >> 이클립스에서 소스를 관리하는 명칭

프로젝트쪽 우클릭 > 맨아래 properties 눌러서 확인

불러오기
프로젝트쪽 우클릭 > import > general > 두번째 existing projects into workspace 클릭해서 불러온다.


<git>
git hub 사용



--------------------------------------------------------------

<전공적인 베이스 (프로그래밍, 운영체제, 컴퓨터구조)>


선언!! > 자료형(원시타입,참조타입), 할당되는 바이트 수, 자료형별 자료의 표현범위 >메모리에 적제

ex)   int a =20;             << 이부분을 깊게 이해하는습관 필요
        sysout(a+40);



메모리가 필요한 이유? 중요한 이유?

CPU: 연산장치
	- 산술연산
	- 논리연산


캐시메모리 : CPU의 빠른 속도에 맞춰 더빠른 메모리를 만들어보자
		>>캐시메모리 등장
		- CPU는 1차적으로 캐시메모리에서 필요한 데이터를 찾고
		  있으면 실행, 없으면 2차로 메모리(RAM))로 넘어간다.


메모리(RAM): 주기억 장치


보조기억장치: (이클립스같은경우: workspace)



CPU가 실행할 자료(명령문(코드),데이터 등)를 가져다 놓는곳 > 메모리
이클립스에서 file -> save :보조기억장치에 저장한다.

- 이클립스에서 ctrl + f11: 보조기억장치에 저장되고, 보조기억장치에서 메모리로 옮겨와서 CPU가 실행

>> 보조기억장치의 위치 : workspace

---------------------------------------------------------------------

byte a= 2;
a=(byte)(a+200);
System.out.println(a);  ----- overflow
>> -54
overflow: 자료의 표현범위를 벗어남
오버플로우는 일어나면 안된다.



--------------------------------------------------------------------------
조건문 :   조건에 따라 분기 하겠다.
	조건에 따라 처리하는 방법을 달리하겠다.

조건이란? 결과가 true, false의 값을 갖는다
다시말해 자료형은 boolean이다.



배열: 하나의 변수로 여러개의 값을 관리한다.

	int[] 변수명 = new int[n]

	1. 변수명과 길이 (n개)
	2. 인덱스와 인덱스의 범위 (인덱스의 길이는 0~ n-1까지이다. n칸)
	3. 인덱스로 값 제어하는 방법
	    이때 인덱스의 값을 어떤 연산자와 명령어로 조합시키느냐에 따라 의도가 달라진다.

	
	변수명[1] = 10;
	sysout(변수명[1]);
	sysout(변수명[0]);	

	>>10
	>>0      ----> 값을 대입하지 않았기 때문에 int의 dafault값 0이 출력됨





















































